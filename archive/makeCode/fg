
//let message = ""
// let recievedIntValue = 0
// let recievedValue = ""
// let recievedState = ""
// let recievedEvent = ""
let soundBusy = -1
//let messages: string[] = []
let messagesToSend: string[] = []
// let parts: string[] = [] 
//let message = ""

let sourceSound = 10000
let sourceTouchTouched = 10100
let sourceTouchReleased = 10101
let sourceSoundBusy = 10200
//soundBusy = -1

function doWork(message: string) {
    let z = message

    //let parts = z.split(',')
    let first = z.indexOf(",")
    let second = z.indexOf(",", first)
    let third = z.indexOf(",", second)


    let recievedEvent = z.substr(0, first);
    //let recievedState = parts[1]
    //let recievedValue = parts[2]


    //  basic.showString(parts[0], 100)

    // recievedEvent = recievedEvent.slice(0, -1)
    // recievedState = recievedState.slice(0, -1)
    // recievedValue = recievedValue.slice(0, -1)

    // let recievedIntValue = parseInt(parts[2])



    //messagesToSend.push("{message,recievedEvent:" + recievedEvent + "}")
    // messagesToSend.push("{message,recievedState: " + recievedState + "}")
    //messagesToSend.push("{message,recievedIntValue:" + recievedIntValue + "}")

    //basic.pause(100)

    basic.showArrow(arrow, 10)
    arrow++
    if (arrow > 7) { arrow = 0 }

    serial.writeString("{sound,play," + recievedEvent + "}")

    // if (parts[0].includes("touch") == true) {
    //     if (parts[1].includes("touched") == true) {
    //         //messagesToSend.push("{sound,play,5}")
    //         //serial.writeString("{sound,play,5}")
    //         //if (parseInt(parts[2]) > 5) {

    //         serial.writeString("{sound,play," + third + "}")
    //         //}
    //         //control.raiseEvent(sourceTouchTouched, recievedIntValue)
    //     }
    //     if (recievedState == "released") {
    //         //control.raiseEvent(sourceTouchReleased, recievedIntValue)
    //     }
    // }
    // if (recievedEvent == "sound") {
    //     if (recievedState == "busy") {
    //         soundBusy = recievedIntValue
    //     }
    // }
}


control.onEvent(sourceTouchTouched, 2, function () {

})

input.onButtonPressed(Button.A, function () {
    messagesToSend.push("{sound,play,4}")
    //basic.pause(10)
})

input.onButtonPressed(Button.B, function () {
    messagesToSend.push("{sound,stop}")
    //basic.pause(10)
    // let msg = messagesToSend.shift()
    // serial.writeString(msg)
})



serial.redirect(
    SerialPin.P8,
    SerialPin.P12,
    BaudRate.BaudRate28800
)

let time_now = 0      // will store last time thing was updated

serial.setRxBufferSize(32)
basic.showIcon(IconNames.Heart)
basic.forever(function () {

    let l = messagesToSend.length


    basic.showNumber(l, 10)


    let msg = messagesToSend.shift()
    serial.writeString(msg)


})

// function displayit() {
//     control.inBackground(function () {
//         if (input.runningTime() >= time_now + 1000) {
//             time_now += 1000;
//             basic.showNumber(messages.length, 10)
//         }
//     })
// }

function sendMessages() {
    control.inBackground(function () {
        while (true) {



            // if (l > 0) {
            //     let msg = messagesToSend.shift()

            //     // if (msg != "") {

            //     serial.writeString(msg)


            // }
        }
    })
}


let arrow = 0;
function recevice_kitiot() {
    control.inBackground(function () {
        while (true) {
            let msg = serial.readUntil('}')
            msg = msg.slice(0, -1)
            //messages.push(msg)




            doWork(msg)





            // if (messages.length > 10) {
            //     basic.pause(100)
            // }
        }

    })
}

recevice_kitiot()
//dealwithit()
//displayit()
//sendMessages()
